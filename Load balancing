/*For example, imagine you have a set of servers that handle requests for a web
application. The key to load balancing is using the hash value of a client's IP 
address or a request ID to determine which server should handle the request. 
The hash function is typically designed so that the data is evenly distributed
 across the servers, ensuring that no single server is overloaded. 
 Write a program of a load balancing system using hashing, where a basic hash 
 table for mapping incoming requests to a set of servers.*/

#include<iostream>
#include<string>
using namespace std;

int main() {
    int servers, requests;
    string val[10]; 
    cout << "Enter number of servers: ";
    cin >> servers;

    string hash_servers[10][10]; 
    int server_load[10] = {0}; 

    cout << "\nEnter number of incoming requests: ";
    cin >> requests;

    cout << "\nEnter request IDs:\n";
    for (int i = 0; i < requests; i++) {
        cout << "Request " << i + 1 << ": ";
        cin >> val[i]; 
    }

    for (int i = 0; i < requests; i++) {
        string ip = val[i];

       
        int hash_val = 0;
        for (int j = 0; j < ip.length(); j++) {
            if (ip[j] != '.') {
                hash_val += ip[j];
            }
        }

        int serverIndex = hash_val % servers;

        
        bool assigned = false;
        for (int j = 0; j < servers; j++) {
            int currentServer = (serverIndex + j) % servers;
            if (server_load[currentServer] < 10) {
                int position = server_load[currentServer];
                hash_servers[currentServer][position] = ip;
                server_load[currentServer]++;
                cout << "\nRequest '" << ip << "' is handled by Server " << currentServer << endl;
                assigned = true;
                break;
            }
        }

        if (!assigned) {
            cout << "\nRequest '" << ip << "' could not be assigned to any server.\n";
        }
    }

    
    cout << "\n\nServer Load Summary:\n";
    for (int i = 0; i < servers; i++) {
        cout << "\nServer " << i << " handled " << server_load[i] << " request(s): ";
        for (int j = 0; j < server_load[i]; j++) {
            cout << hash_servers[i][j] << " ";
        }
    }

    cout << endl;
    return 0;
}
